buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'commons-httpclient:commons-httpclient:3.1'
    }
}

plugins {
    id 'org.gradle.guides.getting-started' version '0.5.4'
    id 'org.ysb33r.vfs' version '1.0'
}

import org.apache.tools.ant.filters.*
import org.apache.tools.ant.taskdefs.condition.Os;

guide {
    repoPath 'gradle-guides/building-cpp-libraries'
    mainAuthor 'Balachandran Sivakumar'
}

// Add in any generation steps.
// TODO: Learn how to use gradleRunner and put in the necessary steps.
// gradleRunner {
//
// }

// Temporary work around to have travis-ci builds passing.
travisci  {
  if(System.getenv('TRAVIS_OS_NAME') != 'linux') {
    tasks.each { t ->
      if( t.name.startsWith('gitPublish')) {
        t.enabled = false
      }
    }
  }
}

task fetchGoogleTest {
    doLast {
        def thirdParty = new File(projectDir, "3rdparty")
        mkdir thirdParty
        vfs {
            cp "zip:https://github.com/google/googletest/archive/master.zip", thirdParty, recursive: true, overwrite: true
        }
    }
}


task initBuildGoogleTest(type: Exec) {
    dependsOn fetchGoogleTest
    def thirdParty = new File(projectDir, "3rdparty")
    def googleTestBuildDir = new File(thirdParty, "googletest-master/googletest/build")
    mkdir googleTestBuildDir
    workingDir googleTestBuildDir
    executable = "cmake"
    args = ["../"]
    standardOutput = new ByteArrayOutputStream()
}

task buildGoogleTest(type: Exec) {
    dependsOn initBuildGoogleTest
    def thirdParty = new File(projectDir, "3rdparty")
    def googleTestBuildDir = new File(thirdParty, "googletest-master/googletest/build")
    workingDir googleTestBuildDir
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
	    executable = "msbuild.exe"
		args = ["gtest.sln", "/p:Configuration=Release"]
	} else {
        executable = "make"
        args = []
	}
    standardOutput = new ByteArrayOutputStream()
}

// The CI builds will invoke assemble, which should fetch and build GoogleTest too.
assemble {
    dependsOn buildGoogleTest
}

apply from: 'gradle/cpp.gradle'

