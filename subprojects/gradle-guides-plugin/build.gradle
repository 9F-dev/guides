plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'maven-publish'
}

apply from: "$rootDir/gradle/functional-test.gradle"

group = 'org.gradle.guides'
version = '0.15.29-SNAPSHOT'

repositories {
    jcenter()
    gradlePluginPortal()
}

dependencies {
    compile 'net.sourceforge.nekohtml:nekohtml:1.9.21'
    compile 'org.codehaus.groovy.modules:http-builder-ng-core:0.11.1'

    compile 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    compile 'org.apache.ant:ant:1.9.13'

    runtimeOnly project('gradle-runner-plugin')

    testImplementation "org.spockframework:spock-core:1.2-groovy-2.5", {
        exclude module : 'groovy-all'
    }
    testImplementation "org.yaml:snakeyaml:1.21"
}

pluginBundle {
    website = 'https://github.com/gradle-guides/gradle-guides-plugin'
    vcsUrl = 'https://github.com/gradle-guides/gradle-guides-plugin'
    tags = ['gradle', 'guides', 'documentation']
}

gradlePlugin {
    plugins {
        guidePlugin {
            id = 'org.gradle.guides'
            implementationClass = 'org.gradle.docs.guides.BasePlugin'
            displayName = 'Gradle Guides Plugin'
            description = 'Plugin for authoring Gradle guides'
        }
        basePlugin {
            id = 'org.gradle.guides.base'
            implementationClass = 'org.gradle.docs.guides.BasePlugin'
            displayName = 'Gradle Guides Base Plugin'
            description = 'Base plugin required by new Gradle guide plugins'
        }
        jvmtestPlugin {
            id = 'org.gradle.guides.test-jvm-code'
            implementationClass = 'org.gradle.docs.guides.TestJvmCodePlugin'
            displayName = 'Gradle Guides JVM Code Snippet Test Plugin'
            description = 'Plugin required for testing of JVM code snippets used in guides'
        }
        samplePlugin {
            id = 'org.gradle.samples'
            implementationClass = 'org.gradle.docs.samples.internal.SamplesPlugin'
            displayName = 'Gradle Sample Plugin'
            description = 'Plugin required for authoring new Gradle Samples'
        }
        documentationPlugin {
            id = 'org.gradle.documentation'
            implementationClass = 'org.gradle.docs.internal.BuildDocumentationPlugin'
            displayName = 'Gradle Documentation Plugin'
            description = 'Plugin for authoring Gradle documentation'
        }
    }
}

publishPlugins {
    dependsOn build

    onlyIf { !version.endsWith('-SNAPSHOT')}
}

task release {
    dependsOn build, publishPlugins
}
